윈도우즈는 물리적인 메모리(RAM)가 부족할 경우 하드 디스크의 페이징 파일(Paging File)을 메모리 대신 사용한다.

마치 페이징 파일이 물리적인 메모리의 일부인 것처럼 프로세스의 주소 공간에 맵하여 사용하며 필요할 경우 RAM으로 읽어오므로 응용 프로그램의 입장에서 볼 때 페이징 파일은 속도가 좀 느릴 뿐 RAM과 전혀 다를 것이 없다.

일반 파일도 정보를 저장하고 읽고 쓸 수 있으므로 운영체제가 하드 디스크의 페이징 파일 대신 일반 파일을 사용하는 것도 이론적으론 전혀 문제가 없다.

메모리 맵 파일(Memory Mapped File)은 이런 이론에 기반하여 하드 디스크에 존재하는 파일의 내용을 프로세스의 주소 공간에 연결(Map)하는 기법이다.

요약하자면 파일을 마치 메모리인 것 처럼 사용하는 기법이라 하겠다.


이 배경에서 시스템은 실행 파일의 당장 필요한 부분을 물리적인 RAM으로 읽어오고 더 이상 필요하지 않은 부분은 RAM에서 제거하는 복잡한 처리를 할 것이다.


운영체제가 이런 식으로 파일 맵핑을 통해 실행 파일을 로드하기 때문에 로딩 속도가 대단히 빠르며 가상 메모리를 절약할 수 있다.(실행파일은 읽기전용이 대부분이므로)

단, 플리포니 CD-ROM, 이동식 디스크 같은 착탈식 미디어는 언제 제거될지 알 수 없으므로 가상 메모리로 전부 읽어들인 후에 실행한다.




또한 메모리 맵 파일은 Win32에서 프로세스간 메모리를 공유하는 유일하고 합법적인 방법이다.




두 개의 프로세스가 하나의 메모리 맵 파일을 동시에 액세스할 수 있기 때문에 메모리 맵 파일을 통해 데이터를 주고 받을 수 있고 동시에 한 메모리 영역을 액세스할 수도 있다.
프로세스간 통신에 사용되는 여러 가지 기술들도 내부적으로 모두 메모리 맵 파일을 활용한다.
