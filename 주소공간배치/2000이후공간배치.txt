다음 그림은 2000환경에서 4개의 프로세스가 실행중일 때의 메모리 구조도를 가상적으로 그린 것이다.

	PrgB			가상 메모리		PrgA
				
				  Free
				PrgC.exe	   화살표 쭊쭊
		화살표		PrgB.exe
				PrgA.exe
				explorer.exe
				comctl32.dll
		쭊쭊		GDI32
				User32
				Kernel32
	explorer			Device Driver		PrgC



각 프로세스의 주소 공간은 모두 분리되어 있고 페이지 테이블에는 프로세스의 주소 공간과 가상 메모리의 연결 상태가 기록되어 있다.

응용 프로그램의 코드와 데이터는 가상 메모리에 로드되며 페이지 테이블에는 이 물리 주소가 응용 프로그램의 가상 주소 공간의 어디쯤에 연결되어 있다는 기록이 작성되어 있을 것이다.



이후 응용 프로그램은 자신의 주소 공간을 액세스함으로써 가상 메모리를 액세스한다.


주소 공간의 대부분은 비어 있는 상태일 것이며 응용 프로그램이 메모리를 할당하면 요구한만큼 가상 메모리가 할당되고 이 영역은 다시 자신의 주소 공간에 맵된다.

만약 가상 메모리에 연결되지 않은 빈 주소 영역을 액세스하면 이것을 액세스 위반(Access Violation)이라고 하며 이런 프로그램은 시스템에 의해 즉시 사살된다.




윈도우즈 환경에서는 비디오 카드, 사운드 카드, 네트워크 등의 하드웨어들을 운영체제가 관리하며 응용 프로그램이 하드웨어를 직접적으로 프로그래밍하지 못하게 금지되어 있다.



비디오 출력을 하고 싶으면 반드시 GDI와 비디오 디바이스 드라이브를 경유해야만 하며 이런 계층에 의해 장치 독립성이 확보된다.

메모리의 경우도 마찬가지로 응용 프로그램이 직접 물리적인 메모리를 액세스하지 못하게 금지되어 있으며 자신의 주소 공간을 통해 운영체제의 중계를 거쳐야만 하고 그 대가로 안정성을 보장받는다.